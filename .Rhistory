library(readxl)
library(openxlsx)
# Specify the path to the Excel file
file_path <- "C:/Users/User/Desktop/june.xlsx" # Ensure the correct file path is used
# Read the Excel file
data <- read_excel(file_path)
# Rename columns to avoid syntax issues
colnames(data) <- c("employee_ids", "date_time", "unknown_column")
# Convert employee_ids column to character type
data$employee_ids <- as.character(data$employee_ids)
# Ensure the date_time column is of POSIXct type
data$date_time <- as.POSIXct(data$date_time, format="%d-%m-%Y %H:%M")
# Extract date from date_time column
data$date <- as.Date(data$date_time)
# Get unique employee IDs
employee_ids <- unique(data$employee_ids)
# Create a new workbook
wb <- createWorkbook()
# Loop through each employee ID
for (emp_id in employee_ids) {
# Subset data for the current employee ID
emp_data <- subset(data, employee_ids == emp_id)
# Initialize an empty data frame for storing the sorted data
sorted_data <- data.frame(Date = character(),
First_Check_In = character(),
Breaks = character(),
Last_Check_Out = character(),
stringsAsFactors = FALSE)
# Get unique dates for the current employee
dates <- unique(emp_data$date)
# Loop through each date
for (d in dates) {
# Subset data for the current date
day_data <- subset(emp_data, date == d)
# Sort the data by date_time
day_data <- day_data[order(day_data$date_time),]
# Extract first check-in, breaks, and last check-out
first_check_in <- as.character(day_data$date_time[1])
last_check_out <- as.character(day_data$date_time[nrow(day_data)])
breaks <- if (nrow(day_data) > 2) {
paste(as.character(day_data$date_time[2:(nrow(day_data) - 1)]), collapse = ", ")
} else {
""
}
# Append the sorted data to the data frame
sorted_data <- rbind(sorted_data, data.frame(Date = as.character(d),
First_Check_In = first_check_in,
Breaks = breaks,
Last_Check_Out = last_check_out,
stringsAsFactors = FALSE))
}
# Create a new sheet with the employee ID as sheet name
addWorksheet(wb, sheetName = as.character(emp_id))
# Write sorted data to the new sheet
writeData(wb, sheet = as.character(emp_id), sorted_data)
}
# Save the workbook to the specified path
saveWorkbook(wb, file_path, overwrite = TRUE)
View(day_data)
View(emp_data)
View(sorted_data)
View(emp_data)
# Load required packages
if (!require("readxl")) install.packages("readxl")
if (!require("openxlsx")) install.packages("openxlsx")
library(readxl)
library(openxlsx)
# Specify the path to the Excel file
input_file_path <- "C:/Users/User/Desktop/june.xlsx"
output_file_path <- "C:/Users/User/Desktop/New_Attendance_File.xlsx"
# Read the Excel file
data <- read_excel(input_file_path)
# Rename columns to avoid syntax issues
colnames(data) <- c("employee_ids", "date_time", "unknown_column")
# Convert employee_ids column to character type
data$employee_ids <- as.character(data$employee_ids)
# Ensure the date_time column is of POSIXct type
data$date_time <- as.POSIXct(data$date_time, format="%d-%m-%Y %H:%M")
# Extract date from date_time column
data$date <- as.Date(data$date_time)
# Get unique employee IDs
employee_ids <- unique(data$employee_ids)
# Create a new workbook
wb <- createWorkbook()
# Loop through each employee ID
for (emp_id in employee_ids) {
# Subset data for the current employee ID
emp_data <- subset(data, employee_ids == emp_id)
# Initialize an empty data frame for storing the sorted data
sorted_data <- data.frame(Date = character(),
First_Check_In = character(),
Breaks = character(),
Last_Check_Out = character(),
stringsAsFactors = FALSE)
# Get unique dates for the current employee
dates <- unique(emp_data$date)
# Loop through each date
for (d in dates) {
# Subset data for the current date
day_data <- subset(emp_data, date == d)
# Sort the data by date_time
day_data <- day_data[order(day_data$date_time),]
# Extract first check-in, breaks, and last check-out
first_check_in <- as.character(day_data$date_time[1])
last_check_out <- as.character(day_data$date_time[nrow(day_data)])
breaks <- if (nrow(day_data) > 2) {
paste(as.character(day_data$date_time[2:(nrow(day_data) - 1)]), collapse = ", ")
} else {
""
}
# Append the sorted data to the data frame
sorted_data <- rbind(sorted_data, data.frame(Date = as.character(d),
First_Check_In = first_check_in,
Breaks = breaks,
Last_Check_Out = last_check_out,
stringsAsFactors = FALSE))
}
# Create a new sheet with the employee ID as sheet name
addWorksheet(wb, sheetName = as.character(emp_id))
# Write sorted data to the new sheet
writeData(wb, sheet = as.character(emp_id), sorted_data)
}
# Save the workbook to the specified path
saveWorkbook(wb, output_file_path, overwrite = TRUE)
# Load required packages
if (!require("readxl")) install.packages("readxl")
if (!require("openxlsx")) install.packages("openxlsx")
library(readxl)
library(openxlsx)
# Specify the path to the Excel file
input_file_path <- "C:/Users/User/Desktop/june.xlsx"
output_file_path <- "C:/Users/User/Desktop/New_Attendance_File.xlsx"
# Read the Excel file
data <- read_excel(input_file_path)
# Rename columns to avoid syntax issues
colnames(data) <- c("employee_ids", "date_time", "unknown_column")
# Convert employee_ids column to character type
data$employee_ids <- as.character(data$employee_ids)
# Ensure the date_time column is of POSIXct type
data$date_time <- as.POSIXct(data$date_time, format="%Y-%m-%d %H:%M")
# Extract date from date_time column
data$date <- as.Date(data$date_time)
# Get unique employee IDs
employee_ids <- unique(data$employee_ids)
# Create a new workbook
wb <- createWorkbook()
# Loop through each employee ID
for (emp_id in employee_ids) {
# Subset data for the current employee ID
emp_data <- subset(data, employee_ids == emp_id)
# Initialize an empty data frame for storing the sorted data
sorted_data <- data.frame(Date = character(),
First_Check_In = character(),
Breaks = character(),
Last_Check_Out = character(),
stringsAsFactors = FALSE)
# Get unique dates for the current employee
dates <- unique(emp_data$date)
# Loop through each date
for (d in dates) {
# Subset data for the current date
day_data <- subset(emp_data, date == d)
# Sort the data by date_time
day_data <- day_data[order(day_data$date_time),]
# Extract first check-in, breaks, and last check-out
first_check_in <- as.character(day_data$date_time[1])
last_check_out <- as.character(day_data$date_time[nrow(day_data)])
breaks <- if (nrow(day_data) > 2) {
paste(as.character(day_data$date_time[2:(nrow(day_data) - 1)]), collapse = ", ")
} else {
""
}
# Append the sorted data to the data frame
sorted_data <- rbind(sorted_data, data.frame(Date = as.character(d),
First_Check_In = first_check_in,
Breaks = breaks,
Last_Check_Out = last_check_out,
stringsAsFactors = FALSE))
}
# Create a new sheet with the employee ID as sheet name
addWorksheet(wb, sheetName = as.character(emp_id))
# Write sorted data to the new sheet
writeData(wb, sheet = as.character(emp_id), sorted_data)
}
# Save the workbook to the specified path
saveWorkbook(wb, output_file_path, overwrite = TRUE)
# Load required packages
if (!require("readxl")) install.packages("readxl")
if (!require("openxlsx")) install.packages("openxlsx")
library(readxl)
library(openxlsx)
# Specify the path to the Excel file
input_file_path <- "C:/Users/User/Desktop/may.xlsx"
output_file_path <- "C:/Users/User/Desktop/New_Attendance_File.xlsx"
# Read the Excel file
data <- read_excel(input_file_path)
# Rename columns to avoid syntax issues
colnames(data) <- c("employee_ids", "date_time", "unknown_column")
# Convert employee_ids column to character type
data$employee_ids <- as.character(data$employee_ids)
# Ensure the date_time column is of POSIXct type
data$date_time <- as.POSIXct(data$date_time, format="%Y-%m-%d %H:%M")
# Extract date from date_time column
data$date <- as.Date(data$date_time)
# Get unique employee IDs
employee_ids <- unique(data$employee_ids)
# Create a new workbook
wb <- createWorkbook()
# Loop through each employee ID
for (emp_id in employee_ids) {
# Subset data for the current employee ID
emp_data <- subset(data, employee_ids == emp_id)
# Initialize an empty data frame for storing the sorted data
sorted_data <- data.frame(Date = character(),
First_Check_In = character(),
Breaks = character(),
Last_Check_Out = character(),
stringsAsFactors = FALSE)
# Get unique dates for the current employee
dates <- unique(emp_data$date)
# Loop through each date
for (d in dates) {
# Subset data for the current date
day_data <- subset(emp_data, date == d)
# Sort the data by date_time
day_data <- day_data[order(day_data$date_time),]
# Extract first check-in, breaks, and last check-out
first_check_in <- as.character(day_data$date_time[1])
last_check_out <- as.character(day_data$date_time[nrow(day_data)])
breaks <- if (nrow(day_data) > 2) {
paste(as.character(day_data$date_time[2:(nrow(day_data) - 1)]), collapse = ", ")
} else {
""
}
# Append the sorted data to the data frame
sorted_data <- rbind(sorted_data, data.frame(Date = as.character(d),
First_Check_In = first_check_in,
Breaks = breaks,
Last_Check_Out = last_check_out,
stringsAsFactors = FALSE))
}
# Create a new sheet with the employee ID as sheet name
addWorksheet(wb, sheetName = as.character(emp_id))
# Write sorted data to the new sheet
writeData(wb, sheet = as.character(emp_id), sorted_data)
}
# Save the workbook to the specified path
saveWorkbook(wb, output_file_path, overwrite = TRUE)
# Load required packages
if (!require("readxl")) install.packages("readxl")
if (!require("openxlsx")) install.packages("openxlsx")
library(readxl)
library(openxlsx)
# Specify the path to the Excel file
input_file_path <- "C:/Users/User/Desktop/may.xlsx"
output_file_path <- "C:/Users/User/Desktop/New_Attendance_File.xlsx"
# Read the Excel file
data <- read_excel(input_file_path)
# Rename columns to avoid syntax issues
colnames(data) <- c("employee_ids", "date_time", "unknown_column")
# Convert employee_ids column to character type
data$employee_ids <- as.character(data$employee_ids)
# Ensure the date_time column is of POSIXct type
data$date_time <- as.POSIXct(data$date_time, format="%Y-%m-%d %H:%M")
# Extract date from date_time column
data$date <- as.Date(data$date_time)
# Get unique employee IDs
employee_ids <- unique(data$employee_ids)
# Print unique employee IDs for debugging
print(paste("Unique employee IDs:", employee_ids))
# Create a new workbook
wb <- createWorkbook()
# Loop through each employee ID
for (emp_id in employee_ids) {
# Subset data for the current employee ID
emp_data <- subset(data, employee_ids == emp_id)
# Print current employee ID and number of records for debugging
print(paste("Processing employee ID:", emp_id, "with", nrow(emp_data), "records"))
# Initialize an empty data frame for storing the sorted data
sorted_data <- data.frame(Date = character(),
First_Check_In = character(),
Breaks = character(),
Last_Check_Out = character(),
stringsAsFactors = FALSE)
# Get unique dates for the current employee
dates <- unique(emp_data$date)
# Loop through each date
for (d in dates) {
# Subset data for the current date
day_data <- subset(emp_data, date == d)
# Sort the data by date_time
day_data <- day_data[order(day_data$date_time),]
# Extract first check-in, breaks, and last check-out
first_check_in <- as.character(day_data$date_time[1])
last_check_out <- as.character(day_data$date_time[nrow(day_data)])
breaks <- if (nrow(day_data) > 2) {
paste(as.character(day_data$date_time[2:(nrow(day_data) - 1)]), collapse = ", ")
} else {
""
}
# Append the sorted data to the data frame
sorted_data <- rbind(sorted_data, data.frame(Date = as.character(d),
First_Check_In = first_check_in,
Breaks = breaks,
Last_Check_Out = last_check_out,
stringsAsFactors = FALSE))
}
# Create a new sheet with the employee ID as sheet name
addWorksheet(wb, sheetName = as.character(emp_id))
# Write sorted data to the new sheet
writeData(wb, sheet = as.character(emp_id), sorted_data)
}
# Save the workbook to the specified path
saveWorkbook(wb, output_file_path, overwrite = TRUE)
# Load required packages
if (!require("readxl")) install.packages("readxl")
if (!require("openxlsx")) install.packages("openxlsx")
library(readxl)
library(openxlsx)
# Specify the path to the Excel file
input_file_path <- "C:/Users/User/Desktop/may.xlsx"
output_file_path <- "C:/Users/User/Desktop/New_Attendance_File.xlsx"
# Read the Excel file
data <- read_excel(input_file_path)
# Rename columns to avoid syntax issues
colnames(data) <- c("employee_ids", "date_time", "unknown_column")
# Convert employee_ids column to character type
data$employee_ids <- as.character(data$employee_ids)
# Ensure the date_time column is of POSIXct type
data$date_time <- as.POSIXct(data$date_time, format="%Y-%m-%d %H:%M")
# Extract date from date_time column
data$date <- as.Date(data$date_time)
# Get unique employee IDs
employee_ids <- unique(data$employee_ids)
# Print unique employee IDs for debugging
print(paste("Unique employee IDs:", employee_ids))
# Create a new workbook
wb <- createWorkbook()
# Loop through each employee ID
for (emp_id in employee_ids) {
# Subset data for the current employee ID
emp_data <- subset(data, employee_ids == emp_id)
# Print current employee ID and number of records for debugging
print(paste("Processing employee ID:", emp_id, "with", nrow(emp_data), "records"))
# Initialize an empty data frame for storing the sorted data
sorted_data <- data.frame(Date = character(),
First_Check_In = character(),
Breaks = character(),
Last_Check_Out = character(),
stringsAsFactors = FALSE)
# Get unique dates for the current employee
dates <- unique(emp_data$date)
# Loop through each date
for (d in dates) {
# Subset data for the current date
day_data <- subset(emp_data, date == d)
# Sort the data by date_time
day_data <- day_data[order(day_data$date_time),]
# Extract first check-in, breaks, and last check-out
first_check_in <- as.character(day_data$date_time[1])
last_check_out <- as.character(day_data$date_time[nrow(day_data)])
breaks <- if (nrow(day_data) > 2) {
paste(as.character(day_data$date_time[2:(nrow(day_data) - 1)]), collapse = ", ")
} else {
""
}
# Append the sorted data to the data frame
sorted_data <- rbind(sorted_data, data.frame(Date = as.character(d),
First_Check_In = first_check_in,
Breaks = breaks,
Last_Check_Out = last_check_out,
stringsAsFactors = FALSE))
}
# Create a new sheet with the employee ID as sheet name
addWorksheet(wb, sheetName = as.character(emp_id))
# Write sorted data to the new sheet
writeData(wb, sheet = as.character(emp_id), sorted_data)
}
# Save the workbook to the specified path
saveWorkbook(wb, output_file_path, overwrite = TRUE)
# Load required packages
if (!require("readxl")) install.packages("readxl")
if (!require("openxlsx")) install.packages("openxlsx")
library(readxl)
library(openxlsx)
# Specify the path to the Excel file
input_file_path <- "C:/Users/User/Desktop/may.xlsx"
output_file_path <- "C:/Users/User/Desktop/New_Attendance_File.xlsx"
# Read the Excel file
data <- read_excel(input_file_path)
# Rename columns to avoid syntax issues
colnames(data) <- c("employee_ids", "date_time", "unknown_column")
# Convert employee_ids column to character type
data$employee_ids <- as.character(data$employee_ids)
# Ensure the date_time column is of POSIXct type
data$date_time <- as.POSIXct(data$date_time, format="%Y-%m-%d %H:%M")
# Extract date from date_time column
data$date <- as.Date(data$date_time)
# Get unique employee IDs
employee_ids <- unique(data$employee_ids)
# Print unique employee IDs for debugging
print(paste("Unique employee IDs:", paste(employee_ids, collapse = ", ")))
# Create a new workbook
wb <- createWorkbook()
# Loop through each employee ID
for (emp_id in employee_ids) {
# Subset data for the current employee ID
emp_data <- subset(data, employee_ids == emp_id)
# Print current employee ID and number of records for debugging
print(paste("Processing employee ID:", emp_id, "with", nrow(emp_data), "records"))
# Initialize an empty data frame for storing the sorted data
sorted_data <- data.frame(Date = character(),
First_Check_In = character(),
Breaks = character(),
Last_Check_Out = character(),
stringsAsFactors = FALSE)
# Get unique dates for the current employee
dates <- unique(emp_data$date)
# Loop through each date
for (d in dates) {
# Subset data for the current date
day_data <- subset(emp_data, date == d)
# Sort the data by date_time
day_data <- day_data[order(day_data$date_time),]
# Extract first check-in, breaks, and last check-out
first_check_in <- as.character(day_data$date_time[1])
last_check_out <- as.character(day_data$date_time[nrow(day_data)])
breaks <- if (nrow(day_data) > 2) {
paste(as.character(day_data$date_time[2:(nrow(day_data) - 1)]), collapse = ", ")
} else {
""
}
# Append the sorted data to the data frame
sorted_data <- rbind(sorted_data, data.frame(Date = as.character(d),
First_Check_In = first_check_in,
Breaks = breaks,
Last_Check_Out = last_check_out,
stringsAsFactors = FALSE))
}
# Create a new sheet with the employee ID as sheet name
addWorksheet(wb, sheetName = as.character(emp_id))
# Write sorted data to the new sheet
writeData(wb, sheet = as.character(emp_id), sorted_data)
}
# Save the workbook to the specified path
saveWorkbook(wb, output_file_path, overwrite = TRUE)
# Load required packages
if (!require("readxl")) install.packages("readxl")
if (!require("openxlsx")) install.packages("openxlsx")
library(readxl)
library(openxlsx)
# Specify the path to the Excel file
input_file_path <- "C:/Users/User/Desktop/may.xlsx"
output_file_path <- "C:/Users/User/Desktop/New_Attendance_File.xlsx"
# Read the Excel file
data <- read_excel(input_file_path)
# Rename columns to avoid syntax issues
colnames(data) <- c("employee_ids", "date_time", "unknown_column")
# Convert employee_ids column to character type
data$employee_ids <- as.character(data$employee_ids)
# Ensure the date_time column is of POSIXct type
data$date_time <- as.POSIXct(data$date_time, format="%Y-%m-%d %H:%M")
# Extract date from date_time column
data$date <- as.Date(data$date_time)
# Get unique employee IDs
employee_ids <- unique(data$employee_ids)
# Print unique employee IDs for debugging
print(paste("Unique employee IDs:", paste(employee_ids, collapse = ", ")))
# Create a new workbook
wb <- createWorkbook()
# Loop through each employee ID
for (emp_id in employee_ids) {
# Subset data for the current employee ID
emp_data <- subset(data, employee_ids == emp_id)
# Print current employee ID and number of records for debugging
print(paste("Processing employee ID:", emp_id, "with", nrow(emp_data), "records"))
# Initialize an empty data frame for storing the sorted data
sorted_data <- data.frame(Date = character(),
First_Check_In = character(),
Breaks = character(),
Last_Check_Out = character(),
stringsAsFactors = FALSE)
# Get unique dates for the current employee
dates <- unique(emp_data$date)
# Loop through each date
for (d in dates) {
# Subset data for the current date
day_data <- subset(emp_data, date == d)
# Sort the data by date_time
day_data <- day_data[order(day_data$date_time),]
# Extract first check-in, breaks, and last check-out
first_check_in <- as.character(day_data$date_time[1])
last_check_out <- as.character(day_data$date_time[nrow(day_data)])
breaks <- if (nrow(day_data) > 2) {
paste(as.character(day_data$date_time[2:(nrow(day_data) - 1)]), collapse = ", ")
} else {
""
}
# Append the sorted data to the data frame
sorted_data <- rbind(sorted_data, data.frame(Date = as.character(d),
First_Check_In = first_check_in,
Breaks = breaks,
Last_Check_Out = last_check_out,
stringsAsFactors = FALSE))
}
# Create a new sheet with the employee ID as sheet name
addWorksheet(wb, sheetName = as.character(emp_id))
# Write sorted data to the new sheet
writeData(wb, sheet = as.character(emp_id), sorted_data)
}
# Save the workbook to the specified path
saveWorkbook(wb, output_file_path, overwrite = TRUE)
